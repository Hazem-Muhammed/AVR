
EX1.2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003dc  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000430  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000430  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000460  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000a0  00000000  00000000  0000049c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000f1f  00000000  00000000  0000053c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000777  00000000  00000000  0000145b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000068b  00000000  00000000  00001bd2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000ec  00000000  00000000  00002260  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000579  00000000  00000000  0000234c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000783  00000000  00000000  000028c5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000070  00000000  00000000  00003048  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 89 01 	call	0x312	; 0x312 <main>
  64:	0c 94 ec 01 	jmp	0x3d8	; 0x3d8 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <dio_vidConfigChannel>:
		DIO_PORTC_REG &= ~mask ;
		DIO_PORTC_REG |= (value<<pos)&mask ;
		break;
		case DIO_PORTD:
		DIO_PORTD_REG &= ~mask ;
		DIO_PORTD_REG |= (value<<pos)&mask ;
  6c:	81 30       	cpi	r24, 0x01	; 1
  6e:	01 f1       	breq	.+64     	; 0xb0 <dio_vidConfigChannel+0x44>
  70:	30 f0       	brcs	.+12     	; 0x7e <dio_vidConfigChannel+0x12>
  72:	82 30       	cpi	r24, 0x02	; 2
  74:	b1 f1       	breq	.+108    	; 0xe2 <dio_vidConfigChannel+0x76>
  76:	83 30       	cpi	r24, 0x03	; 3
  78:	09 f4       	brne	.+2      	; 0x7c <dio_vidConfigChannel+0x10>
  7a:	4c c0       	rjmp	.+152    	; 0x114 <dio_vidConfigChannel+0xa8>
  7c:	08 95       	ret
  7e:	41 30       	cpi	r20, 0x01	; 1
  80:	59 f4       	brne	.+22     	; 0x98 <dio_vidConfigChannel+0x2c>
  82:	2a b3       	in	r18, 0x1a	; 26
  84:	81 e0       	ldi	r24, 0x01	; 1
  86:	90 e0       	ldi	r25, 0x00	; 0
  88:	02 c0       	rjmp	.+4      	; 0x8e <dio_vidConfigChannel+0x22>
  8a:	88 0f       	add	r24, r24
  8c:	99 1f       	adc	r25, r25
  8e:	6a 95       	dec	r22
  90:	e2 f7       	brpl	.-8      	; 0x8a <dio_vidConfigChannel+0x1e>
  92:	82 2b       	or	r24, r18
  94:	8a bb       	out	0x1a, r24	; 26
  96:	08 95       	ret
  98:	2a b3       	in	r18, 0x1a	; 26
  9a:	81 e0       	ldi	r24, 0x01	; 1
  9c:	90 e0       	ldi	r25, 0x00	; 0
  9e:	02 c0       	rjmp	.+4      	; 0xa4 <dio_vidConfigChannel+0x38>
  a0:	88 0f       	add	r24, r24
  a2:	99 1f       	adc	r25, r25
  a4:	6a 95       	dec	r22
  a6:	e2 f7       	brpl	.-8      	; 0xa0 <dio_vidConfigChannel+0x34>
  a8:	80 95       	com	r24
  aa:	82 23       	and	r24, r18
  ac:	8a bb       	out	0x1a, r24	; 26
  ae:	08 95       	ret
  b0:	41 30       	cpi	r20, 0x01	; 1
  b2:	59 f4       	brne	.+22     	; 0xca <dio_vidConfigChannel+0x5e>
  b4:	27 b3       	in	r18, 0x17	; 23
  b6:	81 e0       	ldi	r24, 0x01	; 1
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	02 c0       	rjmp	.+4      	; 0xc0 <dio_vidConfigChannel+0x54>
  bc:	88 0f       	add	r24, r24
  be:	99 1f       	adc	r25, r25
  c0:	6a 95       	dec	r22
  c2:	e2 f7       	brpl	.-8      	; 0xbc <dio_vidConfigChannel+0x50>
  c4:	82 2b       	or	r24, r18
  c6:	87 bb       	out	0x17, r24	; 23
  c8:	08 95       	ret
  ca:	27 b3       	in	r18, 0x17	; 23
  cc:	81 e0       	ldi	r24, 0x01	; 1
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	02 c0       	rjmp	.+4      	; 0xd6 <dio_vidConfigChannel+0x6a>
  d2:	88 0f       	add	r24, r24
  d4:	99 1f       	adc	r25, r25
  d6:	6a 95       	dec	r22
  d8:	e2 f7       	brpl	.-8      	; 0xd2 <dio_vidConfigChannel+0x66>
  da:	80 95       	com	r24
  dc:	82 23       	and	r24, r18
  de:	87 bb       	out	0x17, r24	; 23
  e0:	08 95       	ret
  e2:	41 30       	cpi	r20, 0x01	; 1
  e4:	59 f4       	brne	.+22     	; 0xfc <dio_vidConfigChannel+0x90>
  e6:	24 b3       	in	r18, 0x14	; 20
  e8:	81 e0       	ldi	r24, 0x01	; 1
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	02 c0       	rjmp	.+4      	; 0xf2 <dio_vidConfigChannel+0x86>
  ee:	88 0f       	add	r24, r24
  f0:	99 1f       	adc	r25, r25
  f2:	6a 95       	dec	r22
  f4:	e2 f7       	brpl	.-8      	; 0xee <dio_vidConfigChannel+0x82>
  f6:	82 2b       	or	r24, r18
  f8:	84 bb       	out	0x14, r24	; 20
  fa:	08 95       	ret
  fc:	24 b3       	in	r18, 0x14	; 20
  fe:	81 e0       	ldi	r24, 0x01	; 1
 100:	90 e0       	ldi	r25, 0x00	; 0
 102:	02 c0       	rjmp	.+4      	; 0x108 <dio_vidConfigChannel+0x9c>
 104:	88 0f       	add	r24, r24
 106:	99 1f       	adc	r25, r25
 108:	6a 95       	dec	r22
 10a:	e2 f7       	brpl	.-8      	; 0x104 <dio_vidConfigChannel+0x98>
 10c:	80 95       	com	r24
 10e:	82 23       	and	r24, r18
 110:	84 bb       	out	0x14, r24	; 20
 112:	08 95       	ret
 114:	41 30       	cpi	r20, 0x01	; 1
 116:	59 f4       	brne	.+22     	; 0x12e <dio_vidConfigChannel+0xc2>
 118:	21 b3       	in	r18, 0x11	; 17
 11a:	81 e0       	ldi	r24, 0x01	; 1
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	02 c0       	rjmp	.+4      	; 0x124 <dio_vidConfigChannel+0xb8>
 120:	88 0f       	add	r24, r24
 122:	99 1f       	adc	r25, r25
 124:	6a 95       	dec	r22
 126:	e2 f7       	brpl	.-8      	; 0x120 <dio_vidConfigChannel+0xb4>
 128:	82 2b       	or	r24, r18
 12a:	81 bb       	out	0x11, r24	; 17
 12c:	08 95       	ret
 12e:	21 b3       	in	r18, 0x11	; 17
 130:	81 e0       	ldi	r24, 0x01	; 1
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	02 c0       	rjmp	.+4      	; 0x13a <dio_vidConfigChannel+0xce>
 136:	88 0f       	add	r24, r24
 138:	99 1f       	adc	r25, r25
 13a:	6a 95       	dec	r22
 13c:	e2 f7       	brpl	.-8      	; 0x136 <dio_vidConfigChannel+0xca>
 13e:	80 95       	com	r24
 140:	82 23       	and	r24, r18
 142:	81 bb       	out	0x11, r24	; 17
 144:	08 95       	ret

00000146 <dio_vidWriteChannel>:
 146:	81 30       	cpi	r24, 0x01	; 1
 148:	01 f1       	breq	.+64     	; 0x18a <dio_vidWriteChannel+0x44>
 14a:	30 f0       	brcs	.+12     	; 0x158 <dio_vidWriteChannel+0x12>
 14c:	82 30       	cpi	r24, 0x02	; 2
 14e:	b1 f1       	breq	.+108    	; 0x1bc <dio_vidWriteChannel+0x76>
 150:	83 30       	cpi	r24, 0x03	; 3
 152:	09 f4       	brne	.+2      	; 0x156 <dio_vidWriteChannel+0x10>
 154:	4c c0       	rjmp	.+152    	; 0x1ee <dio_vidWriteChannel+0xa8>
 156:	08 95       	ret
 158:	41 11       	cpse	r20, r1
 15a:	0c c0       	rjmp	.+24     	; 0x174 <dio_vidWriteChannel+0x2e>
 15c:	2b b3       	in	r18, 0x1b	; 27
 15e:	81 e0       	ldi	r24, 0x01	; 1
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	02 c0       	rjmp	.+4      	; 0x168 <dio_vidWriteChannel+0x22>
 164:	88 0f       	add	r24, r24
 166:	99 1f       	adc	r25, r25
 168:	6a 95       	dec	r22
 16a:	e2 f7       	brpl	.-8      	; 0x164 <dio_vidWriteChannel+0x1e>
 16c:	80 95       	com	r24
 16e:	82 23       	and	r24, r18
 170:	8b bb       	out	0x1b, r24	; 27
 172:	08 95       	ret
 174:	2b b3       	in	r18, 0x1b	; 27
 176:	81 e0       	ldi	r24, 0x01	; 1
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	02 c0       	rjmp	.+4      	; 0x180 <dio_vidWriteChannel+0x3a>
 17c:	88 0f       	add	r24, r24
 17e:	99 1f       	adc	r25, r25
 180:	6a 95       	dec	r22
 182:	e2 f7       	brpl	.-8      	; 0x17c <dio_vidWriteChannel+0x36>
 184:	82 2b       	or	r24, r18
 186:	8b bb       	out	0x1b, r24	; 27
 188:	08 95       	ret
 18a:	41 11       	cpse	r20, r1
 18c:	0c c0       	rjmp	.+24     	; 0x1a6 <dio_vidWriteChannel+0x60>
 18e:	28 b3       	in	r18, 0x18	; 24
 190:	81 e0       	ldi	r24, 0x01	; 1
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	02 c0       	rjmp	.+4      	; 0x19a <dio_vidWriteChannel+0x54>
 196:	88 0f       	add	r24, r24
 198:	99 1f       	adc	r25, r25
 19a:	6a 95       	dec	r22
 19c:	e2 f7       	brpl	.-8      	; 0x196 <dio_vidWriteChannel+0x50>
 19e:	80 95       	com	r24
 1a0:	82 23       	and	r24, r18
 1a2:	88 bb       	out	0x18, r24	; 24
 1a4:	08 95       	ret
 1a6:	28 b3       	in	r18, 0x18	; 24
 1a8:	81 e0       	ldi	r24, 0x01	; 1
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	02 c0       	rjmp	.+4      	; 0x1b2 <dio_vidWriteChannel+0x6c>
 1ae:	88 0f       	add	r24, r24
 1b0:	99 1f       	adc	r25, r25
 1b2:	6a 95       	dec	r22
 1b4:	e2 f7       	brpl	.-8      	; 0x1ae <dio_vidWriteChannel+0x68>
 1b6:	82 2b       	or	r24, r18
 1b8:	88 bb       	out	0x18, r24	; 24
 1ba:	08 95       	ret
 1bc:	41 11       	cpse	r20, r1
 1be:	0c c0       	rjmp	.+24     	; 0x1d8 <dio_vidWriteChannel+0x92>
 1c0:	25 b3       	in	r18, 0x15	; 21
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	02 c0       	rjmp	.+4      	; 0x1cc <dio_vidWriteChannel+0x86>
 1c8:	88 0f       	add	r24, r24
 1ca:	99 1f       	adc	r25, r25
 1cc:	6a 95       	dec	r22
 1ce:	e2 f7       	brpl	.-8      	; 0x1c8 <dio_vidWriteChannel+0x82>
 1d0:	80 95       	com	r24
 1d2:	82 23       	and	r24, r18
 1d4:	85 bb       	out	0x15, r24	; 21
 1d6:	08 95       	ret
 1d8:	25 b3       	in	r18, 0x15	; 21
 1da:	81 e0       	ldi	r24, 0x01	; 1
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	02 c0       	rjmp	.+4      	; 0x1e4 <dio_vidWriteChannel+0x9e>
 1e0:	88 0f       	add	r24, r24
 1e2:	99 1f       	adc	r25, r25
 1e4:	6a 95       	dec	r22
 1e6:	e2 f7       	brpl	.-8      	; 0x1e0 <dio_vidWriteChannel+0x9a>
 1e8:	82 2b       	or	r24, r18
 1ea:	85 bb       	out	0x15, r24	; 21
 1ec:	08 95       	ret
 1ee:	41 11       	cpse	r20, r1
 1f0:	0c c0       	rjmp	.+24     	; 0x20a <dio_vidWriteChannel+0xc4>
 1f2:	22 b3       	in	r18, 0x12	; 18
 1f4:	81 e0       	ldi	r24, 0x01	; 1
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	02 c0       	rjmp	.+4      	; 0x1fe <dio_vidWriteChannel+0xb8>
 1fa:	88 0f       	add	r24, r24
 1fc:	99 1f       	adc	r25, r25
 1fe:	6a 95       	dec	r22
 200:	e2 f7       	brpl	.-8      	; 0x1fa <dio_vidWriteChannel+0xb4>
 202:	80 95       	com	r24
 204:	82 23       	and	r24, r18
 206:	82 bb       	out	0x12, r24	; 18
 208:	08 95       	ret
 20a:	22 b3       	in	r18, 0x12	; 18
 20c:	81 e0       	ldi	r24, 0x01	; 1
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	02 c0       	rjmp	.+4      	; 0x216 <dio_vidWriteChannel+0xd0>
 212:	88 0f       	add	r24, r24
 214:	99 1f       	adc	r25, r25
 216:	6a 95       	dec	r22
 218:	e2 f7       	brpl	.-8      	; 0x212 <dio_vidWriteChannel+0xcc>
 21a:	82 2b       	or	r24, r18
 21c:	82 bb       	out	0x12, r24	; 18
 21e:	08 95       	ret

00000220 <dio_vidFlipChannel>:
					 channel  -> MC channel ID
* \Return value:   : None                            
*******************************************************************************/
void dio_vidFlipChannel(dio_portId_t port, dio_channelId_t channel)
{
	switch (port)
 220:	81 30       	cpi	r24, 0x01	; 1
 222:	89 f0       	breq	.+34     	; 0x246 <dio_vidFlipChannel+0x26>
 224:	28 f0       	brcs	.+10     	; 0x230 <dio_vidFlipChannel+0x10>
 226:	82 30       	cpi	r24, 0x02	; 2
 228:	c9 f0       	breq	.+50     	; 0x25c <dio_vidFlipChannel+0x3c>
 22a:	83 30       	cpi	r24, 0x03	; 3
 22c:	11 f1       	breq	.+68     	; 0x272 <dio_vidFlipChannel+0x52>
 22e:	08 95       	ret
	{
	case DIO_PORTA:
		FLIP_BIT(DIO_PORTA_REG,channel);
 230:	2b b3       	in	r18, 0x1b	; 27
 232:	81 e0       	ldi	r24, 0x01	; 1
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	02 c0       	rjmp	.+4      	; 0x23c <dio_vidFlipChannel+0x1c>
 238:	88 0f       	add	r24, r24
 23a:	99 1f       	adc	r25, r25
 23c:	6a 95       	dec	r22
 23e:	e2 f7       	brpl	.-8      	; 0x238 <dio_vidFlipChannel+0x18>
 240:	82 27       	eor	r24, r18
 242:	8b bb       	out	0x1b, r24	; 27
		break;
 244:	08 95       	ret

	case DIO_PORTB:
		FLIP_BIT(DIO_PORTB_REG,channel);
 246:	28 b3       	in	r18, 0x18	; 24
 248:	81 e0       	ldi	r24, 0x01	; 1
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	02 c0       	rjmp	.+4      	; 0x252 <dio_vidFlipChannel+0x32>
 24e:	88 0f       	add	r24, r24
 250:	99 1f       	adc	r25, r25
 252:	6a 95       	dec	r22
 254:	e2 f7       	brpl	.-8      	; 0x24e <dio_vidFlipChannel+0x2e>
 256:	82 27       	eor	r24, r18
 258:	88 bb       	out	0x18, r24	; 24
		break;
 25a:	08 95       	ret

	case DIO_PORTC:
		FLIP_BIT(DIO_PORTC_REG,channel);
 25c:	25 b3       	in	r18, 0x15	; 21
 25e:	81 e0       	ldi	r24, 0x01	; 1
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	02 c0       	rjmp	.+4      	; 0x268 <dio_vidFlipChannel+0x48>
 264:	88 0f       	add	r24, r24
 266:	99 1f       	adc	r25, r25
 268:	6a 95       	dec	r22
 26a:	e2 f7       	brpl	.-8      	; 0x264 <dio_vidFlipChannel+0x44>
 26c:	82 27       	eor	r24, r18
 26e:	85 bb       	out	0x15, r24	; 21
		break;
 270:	08 95       	ret

	case DIO_PORTD:
		FLIP_BIT(DIO_PORTD_REG,channel);
 272:	22 b3       	in	r18, 0x12	; 18
 274:	81 e0       	ldi	r24, 0x01	; 1
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	02 c0       	rjmp	.+4      	; 0x27e <dio_vidFlipChannel+0x5e>
 27a:	88 0f       	add	r24, r24
 27c:	99 1f       	adc	r25, r25
 27e:	6a 95       	dec	r22
 280:	e2 f7       	brpl	.-8      	; 0x27a <dio_vidFlipChannel+0x5a>
 282:	82 27       	eor	r24, r18
 284:	82 bb       	out	0x12, r24	; 18
 286:	08 95       	ret

00000288 <led_init>:
		#endif
		break;
		
		case LED_YELLOW:
		#if (LED_YELLOW_CONNECTION == SOURCE)
			dio_vidWriteChannel(LED_YELLOW_PORT,LED_YELLOW_CHANNEL,STD_LOW);
 288:	41 e0       	ldi	r20, 0x01	; 1
 28a:	67 e0       	ldi	r22, 0x07	; 7
 28c:	81 e0       	ldi	r24, 0x01	; 1
 28e:	0e 94 36 00 	call	0x6c	; 0x6c <dio_vidConfigChannel>
 292:	41 e0       	ldi	r20, 0x01	; 1
 294:	64 e0       	ldi	r22, 0x04	; 4
 296:	80 e0       	ldi	r24, 0x00	; 0
 298:	0e 94 36 00 	call	0x6c	; 0x6c <dio_vidConfigChannel>
 29c:	41 e0       	ldi	r20, 0x01	; 1
 29e:	65 e0       	ldi	r22, 0x05	; 5
 2a0:	80 e0       	ldi	r24, 0x00	; 0
 2a2:	0e 94 36 00 	call	0x6c	; 0x6c <dio_vidConfigChannel>
 2a6:	41 e0       	ldi	r20, 0x01	; 1
 2a8:	66 e0       	ldi	r22, 0x06	; 6
 2aa:	80 e0       	ldi	r24, 0x00	; 0
 2ac:	0e 94 36 00 	call	0x6c	; 0x6c <dio_vidConfigChannel>
 2b0:	40 e0       	ldi	r20, 0x00	; 0
 2b2:	67 e0       	ldi	r22, 0x07	; 7
 2b4:	81 e0       	ldi	r24, 0x01	; 1
 2b6:	0e 94 a3 00 	call	0x146	; 0x146 <dio_vidWriteChannel>
 2ba:	40 e0       	ldi	r20, 0x00	; 0
 2bc:	64 e0       	ldi	r22, 0x04	; 4
 2be:	80 e0       	ldi	r24, 0x00	; 0
 2c0:	0e 94 a3 00 	call	0x146	; 0x146 <dio_vidWriteChannel>
 2c4:	40 e0       	ldi	r20, 0x00	; 0
 2c6:	65 e0       	ldi	r22, 0x05	; 5
 2c8:	80 e0       	ldi	r24, 0x00	; 0
 2ca:	0e 94 a3 00 	call	0x146	; 0x146 <dio_vidWriteChannel>
 2ce:	40 e0       	ldi	r20, 0x00	; 0
 2d0:	66 e0       	ldi	r22, 0x06	; 6
 2d2:	80 e0       	ldi	r24, 0x00	; 0
 2d4:	0e 94 a3 00 	call	0x146	; 0x146 <dio_vidWriteChannel>
 2d8:	08 95       	ret

000002da <led_toggle>:
* \Parameters (in) : ledId	-> LED id                                                                            
* \Return value:   : None                                                                      
*******************************************************************************/
void led_toggle(led_id_t ledId)
{
	switch(ledId)
 2da:	81 30       	cpi	r24, 0x01	; 1
 2dc:	59 f0       	breq	.+22     	; 0x2f4 <led_toggle+0x1a>
 2de:	28 f0       	brcs	.+10     	; 0x2ea <led_toggle+0x10>
 2e0:	82 30       	cpi	r24, 0x02	; 2
 2e2:	69 f0       	breq	.+26     	; 0x2fe <led_toggle+0x24>
 2e4:	83 30       	cpi	r24, 0x03	; 3
 2e6:	81 f0       	breq	.+32     	; 0x308 <led_toggle+0x2e>
 2e8:	08 95       	ret
	{
		case LED_RED:
		
			dio_vidFlipChannel(LED_RED_PORT,LED_RED_CHANNEL);	
 2ea:	67 e0       	ldi	r22, 0x07	; 7
 2ec:	81 e0       	ldi	r24, 0x01	; 1
 2ee:	0e 94 10 01 	call	0x220	; 0x220 <dio_vidFlipChannel>
		break;
 2f2:	08 95       	ret
		
		case LED_GREEN:
			dio_vidFlipChannel(LED_GREEN_PORT,LED_GREEN_CHANNEL);
 2f4:	64 e0       	ldi	r22, 0x04	; 4
 2f6:	80 e0       	ldi	r24, 0x00	; 0
 2f8:	0e 94 10 01 	call	0x220	; 0x220 <dio_vidFlipChannel>
		break;
 2fc:	08 95       	ret
		
		case LED_BLUE:
			dio_vidFlipChannel(LED_BLUE_PORT,LED_BLUE_CHANNEL);
 2fe:	65 e0       	ldi	r22, 0x05	; 5
 300:	80 e0       	ldi	r24, 0x00	; 0
 302:	0e 94 10 01 	call	0x220	; 0x220 <dio_vidFlipChannel>

		break;
 306:	08 95       	ret
		
		case LED_YELLOW:
			dio_vidFlipChannel(LED_YELLOW_PORT,LED_YELLOW_CHANNEL);
 308:	66 e0       	ldi	r22, 0x06	; 6
 30a:	80 e0       	ldi	r24, 0x00	; 0
 30c:	0e 94 10 01 	call	0x220	; 0x220 <dio_vidFlipChannel>
 310:	08 95       	ret

00000312 <main>:
#include "led.h"


int main(void)
{
    led_init();
 312:	0e 94 44 01 	call	0x288	; 0x288 <led_init>
	
    while (1) 
    {
		led_toggle(LED_YELLOW);
 316:	83 e0       	ldi	r24, 0x03	; 3
 318:	0e 94 6d 01 	call	0x2da	; 0x2da <led_toggle>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 31c:	2f ef       	ldi	r18, 0xFF	; 255
 31e:	84 e3       	ldi	r24, 0x34	; 52
 320:	9c e0       	ldi	r25, 0x0C	; 12
 322:	21 50       	subi	r18, 0x01	; 1
 324:	80 40       	sbci	r24, 0x00	; 0
 326:	90 40       	sbci	r25, 0x00	; 0
 328:	e1 f7       	brne	.-8      	; 0x322 <main+0x10>
 32a:	00 c0       	rjmp	.+0      	; 0x32c <main+0x1a>
 32c:	00 00       	nop
		_delay_ms(500);
		led_toggle(LED_BLUE);
 32e:	82 e0       	ldi	r24, 0x02	; 2
 330:	0e 94 6d 01 	call	0x2da	; 0x2da <led_toggle>
 334:	2f ef       	ldi	r18, 0xFF	; 255
 336:	84 e3       	ldi	r24, 0x34	; 52
 338:	9c e0       	ldi	r25, 0x0C	; 12
 33a:	21 50       	subi	r18, 0x01	; 1
 33c:	80 40       	sbci	r24, 0x00	; 0
 33e:	90 40       	sbci	r25, 0x00	; 0
 340:	e1 f7       	brne	.-8      	; 0x33a <main+0x28>
 342:	00 c0       	rjmp	.+0      	; 0x344 <main+0x32>
 344:	00 00       	nop
		_delay_ms(500);
		led_toggle(LED_GREEN);
 346:	81 e0       	ldi	r24, 0x01	; 1
 348:	0e 94 6d 01 	call	0x2da	; 0x2da <led_toggle>
 34c:	2f ef       	ldi	r18, 0xFF	; 255
 34e:	84 e3       	ldi	r24, 0x34	; 52
 350:	9c e0       	ldi	r25, 0x0C	; 12
 352:	21 50       	subi	r18, 0x01	; 1
 354:	80 40       	sbci	r24, 0x00	; 0
 356:	90 40       	sbci	r25, 0x00	; 0
 358:	e1 f7       	brne	.-8      	; 0x352 <main+0x40>
 35a:	00 c0       	rjmp	.+0      	; 0x35c <main+0x4a>
 35c:	00 00       	nop
		_delay_ms(500);
		led_toggle(LED_RED);
 35e:	80 e0       	ldi	r24, 0x00	; 0
 360:	0e 94 6d 01 	call	0x2da	; 0x2da <led_toggle>
 364:	2f ef       	ldi	r18, 0xFF	; 255
 366:	84 e3       	ldi	r24, 0x34	; 52
 368:	9c e0       	ldi	r25, 0x0C	; 12
 36a:	21 50       	subi	r18, 0x01	; 1
 36c:	80 40       	sbci	r24, 0x00	; 0
 36e:	90 40       	sbci	r25, 0x00	; 0
 370:	e1 f7       	brne	.-8      	; 0x36a <main+0x58>
 372:	00 c0       	rjmp	.+0      	; 0x374 <main+0x62>
 374:	00 00       	nop
		_delay_ms(500);
		led_toggle(LED_RED);
 376:	80 e0       	ldi	r24, 0x00	; 0
 378:	0e 94 6d 01 	call	0x2da	; 0x2da <led_toggle>
 37c:	2f ef       	ldi	r18, 0xFF	; 255
 37e:	84 e3       	ldi	r24, 0x34	; 52
 380:	9c e0       	ldi	r25, 0x0C	; 12
 382:	21 50       	subi	r18, 0x01	; 1
 384:	80 40       	sbci	r24, 0x00	; 0
 386:	90 40       	sbci	r25, 0x00	; 0
 388:	e1 f7       	brne	.-8      	; 0x382 <main+0x70>
 38a:	00 c0       	rjmp	.+0      	; 0x38c <main+0x7a>
 38c:	00 00       	nop
		_delay_ms(500);
		led_toggle(LED_GREEN);
 38e:	81 e0       	ldi	r24, 0x01	; 1
 390:	0e 94 6d 01 	call	0x2da	; 0x2da <led_toggle>
 394:	2f ef       	ldi	r18, 0xFF	; 255
 396:	84 e3       	ldi	r24, 0x34	; 52
 398:	9c e0       	ldi	r25, 0x0C	; 12
 39a:	21 50       	subi	r18, 0x01	; 1
 39c:	80 40       	sbci	r24, 0x00	; 0
 39e:	90 40       	sbci	r25, 0x00	; 0
 3a0:	e1 f7       	brne	.-8      	; 0x39a <main+0x88>
 3a2:	00 c0       	rjmp	.+0      	; 0x3a4 <main+0x92>
 3a4:	00 00       	nop
		_delay_ms(500);
		led_toggle(LED_BLUE);
 3a6:	82 e0       	ldi	r24, 0x02	; 2
 3a8:	0e 94 6d 01 	call	0x2da	; 0x2da <led_toggle>
 3ac:	2f ef       	ldi	r18, 0xFF	; 255
 3ae:	84 e3       	ldi	r24, 0x34	; 52
 3b0:	9c e0       	ldi	r25, 0x0C	; 12
 3b2:	21 50       	subi	r18, 0x01	; 1
 3b4:	80 40       	sbci	r24, 0x00	; 0
 3b6:	90 40       	sbci	r25, 0x00	; 0
 3b8:	e1 f7       	brne	.-8      	; 0x3b2 <main+0xa0>
 3ba:	00 c0       	rjmp	.+0      	; 0x3bc <main+0xaa>
 3bc:	00 00       	nop
		_delay_ms(500);
		led_toggle(LED_YELLOW);
 3be:	83 e0       	ldi	r24, 0x03	; 3
 3c0:	0e 94 6d 01 	call	0x2da	; 0x2da <led_toggle>
 3c4:	2f ef       	ldi	r18, 0xFF	; 255
 3c6:	84 e3       	ldi	r24, 0x34	; 52
 3c8:	9c e0       	ldi	r25, 0x0C	; 12
 3ca:	21 50       	subi	r18, 0x01	; 1
 3cc:	80 40       	sbci	r24, 0x00	; 0
 3ce:	90 40       	sbci	r25, 0x00	; 0
 3d0:	e1 f7       	brne	.-8      	; 0x3ca <main+0xb8>
 3d2:	00 c0       	rjmp	.+0      	; 0x3d4 <main+0xc2>
 3d4:	00 00       	nop
 3d6:	9f cf       	rjmp	.-194    	; 0x316 <main+0x4>

000003d8 <_exit>:
 3d8:	f8 94       	cli

000003da <__stop_program>:
 3da:	ff cf       	rjmp	.-2      	; 0x3da <__stop_program>
